name: Deploy to Servers

on:
  push:
    branches:
      - master-back

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Java 21 설치
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: "21"
          distribution: "temurin"

      # 2. 저장소 클론
      - name: Checkout code
        uses: actions/checkout@v3

      # 3. prod 설정 파일 저장
      - name: Save prod application.yml
        run: |
          echo "${{ secrets.APPLICATION_PROD }}" > back/src/main/resources/application.yml

      # 4. Gradle 빌드
      - name: Build with Gradle
        run: |
          cd back
          ./gradlew clean build

      # 5. Docker 로그인
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # 6. Docker 이미지 빌드 및 푸시
      - name: Build and Push Docker Image
        run: |
          cd back
          docker build -t moonminhyuk1/restaurant:latest .
          docker push moonminhyuk1/restaurant:latest

      # 7. 서버1에 배포
      - name: Deploy to Server1
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SERVER1_IP }}
          username: ${{ secrets.SERVER1_USER }}
          key: ${{ secrets.SERVER1_SSH_KEY }}
          script: |
            docker pull moonminhyuk1/restaurant:latest
            docker stop restaurant || true
            docker rm restaurant || true
            docker run -d --name restaurant -p 8080:8080 moonminhyuk1/restaurant:latest

      # 8. 서버2에 배포
      - name: Deploy to Server2
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SERVER2_IP }}
          username: ${{ secrets.SERVER2_USER }}
          key: ${{ secrets.SERVER2_SSH_KEY }}
          script: |
            docker pull moonminhyuk1/restaurant:latest
            docker stop restaurant || true
            docker rm restaurant || true
            docker run -d --name restaurant -p 8080:8080 moonminhyuk1/restaurant:latest
